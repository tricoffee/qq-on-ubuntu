vim 替换字符串指令


语法为 :[addr]s/源字符串/目的字符串/[option]
全局替换命令为：:%s/源字符串/目的字符串/g
    [addr] 表示检索范围，省略时表示当前行。
        如：“1，20” ：表示从第1行到20行；
        “%” ：表示整个文件，同“1,$”；
        “. ,$” ：从当前行到文件尾；
        s : 表示替换操作
    [option] : 表示操作类型
        如：g 表示全局替换;
        c 表示进行确认
        p 表示替代结果逐行显示（Ctrl + L恢复屏幕）；
        省略option时仅对每行第一个匹配串进行替换；
    如果在源字符串和目的字符串中出现特殊字符，需要用”\”转义

下面是一些例子：

#将That or this 换成 This or that
    :%s/\(That\) or \(this\)/\u\2 or \l\1/
—-
#将句尾的child换成children
    :%s/child\([ ,.;!:?]\)/children\1/g
—-
#将mgi/r/abox换成mgi/r/asquare
    :g/mg\([ira]\)box/s//mg//my\1square/g <=> :g/mg[ira]box/s/box/square/g
—-
#将多个空格换成一个空格
    :%s/ */ /g
—-
#使用空格替换句号或者冒号后面的一个或者多个空格
    :%s/\([:.]\) */\1 /g
—-
#删除所有空行
    :g/^$/d
—-
#删除所有的空白行和空行
    :g/^[ ][ ]*$/d
—-
#在每行的开始插入两个空白
    :%s/^/> /
—-
#在接下来的6行末尾加入.
    :.,5/$/./
—-
#颠倒文件的行序
    :g/.*/m0O <=> :g/^/m0O
—-
#寻找不是数字的开始行,并将其移到文件尾部
    :g!/^[0-9]/m$ <=> g/^[^0-9]/m$
—-
#将文件的第12到17行内容复制10词放到当前文件的尾部
    :1,10g/^/12,17t$
~~~~重复次数的作用
—-
#将chapter开始行下面的第二行的内容写道begin文件中
    :g/^chapter/.+2w>>begin
—-
    :/^part2/,/^part3/g/^chapter/.+2w>>begin
—-
    :/^part2/,/^part3/g/^chapter/.+2w>>begin|+t$
　
    :s/vivian/sky/ 替换当前行第一个 vivian 为 sky
　
    :s/vivian/sky/g 替换当前行所有 vivian 为 sky
　
    :n,$s/vivian/sky/ 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky
　
    :n,$s/vivian/sky/g 替换第 n 行开始到最后一行中每一行所有 vivian 为 sky
　
    n 为数字，若 n 为 .，表示从当前行开始到最后一行
　
    :%s/vivian/sky/（等同于 ：g/vivian/s//sky/） 替换每一行的第一个 vivian 为 sky
　
    :%s/vivian/sky/g（等同于 ：g/vivian/s//sky/g） 替换每一行中所有 vivian 为 sky
　
    可以使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符
　
    :s#vivian/#sky/# 替换当前行第一个 vivian/ 为 sky/
　
    :%s+/oradata/apras/+/user01/apras1+ （使用+ 来 替换 / ）： /oradata/apras/替换成/user01/apras1/
　
    : s/vivian/sky/ 替换当前行第一个 vivian 为 sky
　
    :s/vivian/sky/g 替换当前行所有 vivian 为 sky
　
    :n，$s/vivian/sky/ 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky
　
    :n,$s/vivian/sky/g 替换第 n 行开始到最后一行中每一行所有 vivian 为 sky
　
    （n 为数字，若 n 为 .，表示从当前行开始到最后一行）
　
    :%s/vivian/sky/（等同于 ：g/vivian/s//sky/） 替换每一行的第一个 vivian 为 sky
　
    :%s/vivian/sky/g（等同于 ：g/vivian/s//sky/g） 替换每一行中所有 vivian 为 sky
　
可以使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符
　
    :s#vivian/#sky/# 替换当前行第一个 vivian/ 为 sky/
　
删除文本中的^M
问题描述：对于换行，window下用回车换行（0A0D）来表示，linux下是回车（0A）来表示。这样，将window上的文件拷到unix上用时，总会有个^M.请写个用在unix下的过滤windows文件的换行符（0D）的shell或c程序。
　
使用命令：cat filename1 | tr -d “^V^M” > newfile；
　
使用命令：sed -e “s/^V^M//” filename > outputfilename.需要注意的是在1、2两种方法中，^V和^M指的是Ctrl+V和Ctrl+M.你必须要手工进行输入，而不是粘贴。
　
在vi中处理：首先使用vi打开文件，然后按ESC键，接着输入命令：%s/^V^M//.
    :%s/^M$//g

如果上述方法无用，则正确的解决办法是：
    　
    tr -d “\r” dest
    　
    tr -d “\015″ dest
    　
    strings A>B
    　
利用 :s 命令可以实现字符串的替换。具体的用法包括：
    　
    :s/str1/str2/ 用字符串 str2 替换行中首次出现的字符串 str1
    　
    :s/str1/str2/g 用字符串 str2 替换行中所有出现的字符串 str1
    　
    :.,$ s/str1/str2/g 用字符串 str2 替换正文当前行到末尾所有出现的字符串 str1
    　
    :1,$ s/str1/str2/g 用字符串 str2 替换正文中所有出现的字符串 str1
    　
    :g/str1/s//str2/g 功能同上
    　
　　从上述替换命令可以看到:g 放在命令末尾，表示对搜索字符串的每次出现进行替换；不加 g，表示只对搜索
　
　　字符串的首次出现进行替换:g 放在命令开头，表示对正文中所有包含搜索字符串的行进行替换操作。
   

vim行首加入某字符


按键操作：
注释：ctrl+v 进入列编辑模式,向下或向上移动光标,把需要注释的行的开头标记起来,然后按大写的I,再插入注释符,比如"#",再按Esc,就会全部注释了。
删除：先按v,进入visual模式,横向选中列的个数(如"#"注释符号,需要选中两列),再按Esc,再按ctrl+v 进入列编辑模式,向下或向上移动光标,选中注释部分,然后按d, 就会删除注释符号（#）。

PS：当然不一定是shell的注释符"#"，也可以是"//"，或者其他任意的字符；vim才不知道什么是注释符呢，都是字符而已。

使用替换命令：
:% s/^/\/\//g     在全部内容的行首添加//号注释
:2,50 s/^/\/\//g  在2~50行首添加//号注释

:2,50 s/^\/\///g  在2~50行首删除//号

替换空行：

:1,$s/^$\n//g

每行的行首都添加一个字符串：%s/^/要插入的字符串

每行的行尾都添加一个字符串：%s/$/要插入的字符串


解释：

% 代表针对被编辑文件的每一行进行后续操作
$ 代表一行的结尾处
^ 代表一行的开头处


